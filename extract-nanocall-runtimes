#!/bin/bash

# get scaling & basecalling runtimes from nanocall log file

printab() {
    _delim=$'\t'
    printf "%s" "$1"
    shift
    while [ $# -ge 1 ]; do
        printf "%s%s" "$_delim" "$1"
        shift
    done
    printf "\n"
}

printab "scaling" "basecalling"

a=($(cat "$@" |
        tr '\r' '\n' |
        grep -n 'seconds$' |
        tr ':' ' ' |
        sed 's/  */\t/g' |
        sort -k 3n -k 1n |
        tail -n 2 |
        cut -f 3,6))

if [ ${#a[@]} -eq 2 ]; then
    t=(0 ${a[1]})
elif [ ${#a[@]} -eq 4 ]; then
    if [ ${a[0]} = ${a[2]} ]; then
        t=(${a[1]} ${a[3]})
    else
        t=(0 ${a[3]})
    fi
else
    t=('?' '?')
fi

printab "${t[@]}"
